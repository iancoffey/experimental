// +build !ignore_autogenerated

/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	pipelinev1alpha1 "github.com/tektoncd/pipeline/pkg/apis/pipeline/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventBinding) DeepCopyInto(out *EventBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventBinding.
func (in *EventBinding) DeepCopy() *EventBinding {
	if in == nil {
		return nil
	}
	out := new(EventBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventBindingList) DeepCopyInto(out *EventBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EventBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventBindingList.
func (in *EventBindingList) DeepCopy() *EventBindingList {
	if in == nil {
		return nil
	}
	out := new(EventBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventBindingSpec) DeepCopyInto(out *EventBindingSpec) {
	*out = *in
	out.PipelineRef = in.PipelineRef
	out.SourceRef = in.SourceRef
	if in.ResourceTemplates != nil {
		in, out := &in.ResourceTemplates, &out.ResourceTemplates
		*out = make([]pipelinev1alpha1.PipelineResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]pipelinev1alpha1.PipelineResourceBinding, len(*in))
		copy(*out, *in)
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]pipelinev1alpha1.Param, len(*in))
		copy(*out, *in)
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(v1.Duration)
		**out = **in
	}
	out.EventRef = in.EventRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventBindingSpec.
func (in *EventBindingSpec) DeepCopy() *EventBindingSpec {
	if in == nil {
		return nil
	}
	out := new(EventBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventBindingStatus) DeepCopyInto(out *EventBindingStatus) {
	*out = *in
	in.Status.DeepCopyInto(&out.Status)
	out.Address = in.Address
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventBindingStatus.
func (in *EventBindingStatus) DeepCopy() *EventBindingStatus {
	if in == nil {
		return nil
	}
	out := new(EventBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TektonListener) DeepCopyInto(out *TektonListener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TektonListener.
func (in *TektonListener) DeepCopy() *TektonListener {
	if in == nil {
		return nil
	}
	out := new(TektonListener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TektonListener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TektonListenerList) DeepCopyInto(out *TektonListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TektonListener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TektonListenerList.
func (in *TektonListenerList) DeepCopy() *TektonListenerList {
	if in == nil {
		return nil
	}
	out := new(TektonListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TektonListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TektonListenerSpec) DeepCopyInto(out *TektonListenerSpec) {
	*out = *in
	out.PipelineRef = in.PipelineRef
	if in.PipelineRunSpec != nil {
		in, out := &in.PipelineRunSpec, &out.PipelineRunSpec
		*out = new(pipelinev1alpha1.PipelineRunSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TektonListenerSpec.
func (in *TektonListenerSpec) DeepCopy() *TektonListenerSpec {
	if in == nil {
		return nil
	}
	out := new(TektonListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TektonListenerStatus) DeepCopyInto(out *TektonListenerStatus) {
	*out = *in
	in.Status.DeepCopyInto(&out.Status)
	if in.Results != nil {
		in, out := &in.Results, &out.Results
		*out = new(pipelinev1alpha1.Results)
		**out = **in
	}
	if in.PipelineRuns != nil {
		in, out := &in.PipelineRuns, &out.PipelineRuns
		*out = make(map[string]*pipelinev1alpha1.PipelineRunStatus, len(*in))
		for key, val := range *in {
			var outVal *pipelinev1alpha1.PipelineRunStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(pipelinev1alpha1.PipelineRunStatus)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	out.Address = in.Address
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TektonListenerStatus.
func (in *TektonListenerStatus) DeepCopy() *TektonListenerStatus {
	if in == nil {
		return nil
	}
	out := new(TektonListenerStatus)
	in.DeepCopyInto(out)
	return out
}
